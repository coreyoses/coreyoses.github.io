#!/usr/bin/env python

from basic_functions import *
from generator import getViewSpecificNode
from generator import data_file
from generator import _LATEX_

def getLatexHyperlink(link,display):
    return "\\href{"+link+"}{"+display+"}"

def getPhoneNumber(numbers):
    #should have 4 parts
    return " ".join(["+"+str(numbers[0]),"("+str(numbers[1])+")",str(numbers[2]),str(numbers[3])])

def getResumeContent():

    def getHeader():
        header=[]
        header.append("\\documentclass{scrartcl}")
        header.append("\\reversemarginpar")
        header.append("\\newcommand{\\MarginText}[1]{\\marginpar{\\raggedleft\\itshape\\small#1}}")
        header.append("\\usepackage[nochapters]{classicthesis}")
        header.append("\\usepackage[LabelsAligned]{currvita}")
        header.append("\\renewcommand{\\cvheadingfont}{\\LARGE\\color{Maroon}}")
        header.append("\\usepackage{hyperref}")
        header.append("\\hypersetup{colorlinks,breaklinks,urlcolor=Maroon,linkcolor=Maroon}")
        header.append("\\newlength{\datebox}\\settowidth{\datebox}{Spring 2011}")
        header.append("\\newcommand{\\NewEntry}[3]{\\noindent\\hangindent=2em\\hangafter=0\\parbox{\\datebox}{\\small\\textit{#1}}\\hspace{1.5em} #2 #3")
        header.append("\\vspace{0.5em}}")
        header.append("\\newcommand{\\Description}[1]{\\hangindent=2em\\hangafter=0\\noindent\\raggedright\\footnotesize{#1}\par\\normalsize\\vspace{1em}}")
        return header

    def getNewEntry(header,description,extra=""):
        output="\\NewEntry{"
        output+=header
        output+="}{"
        output+=description
        output+="}"
        if extra:
            output+="{"
            output+=extra
            output+="}"
        return output

    def getDescription(header,description):
        output="\\Description{"
        if header:
            output+="\\MarginText{"+header+"}"
        output+=description+"}"
        return output

    def getSectionHeader(header,VSpacing="1em"):
        return "".join(["\\noindent\\spacedlowsmallcaps{",header,"}\\vspace{"+VSpacing+"}"])

    def getPersonalInfo():
        pinfo=data_file("data/personal_info.json")
        content=[]
        misc=""
        misc+="\\begin{cv}{"
        misc+="\\spacedallcaps{"+pinfo.getNodeData("first_name",_LATEX_)+" "+pinfo.getNodeData("last_name",_LATEX_)+"}}"
        misc+="\\vspace{0.5em}"
        content.append(misc)
        titles=pinfo.getNodeData("titles")
        for title in titles:
            content.append("\\noindent\\textit{"+getViewSpecificNode(title["title"],_LATEX_)+\
                    ",} "+getViewSpecificNode(title["location"],_LATEX_))
        content.append("\\vspace{1.5em}")
        content.append(getSectionHeader("Personal Information","0.5em"))
        content.append(getNewEntry("email",\
                getLatexHyperlink("mailto:"+pinfo.getNodeData("email",_LATEX_),pinfo.getNodeData("email",_LATEX_))))
        content.append(getNewEntry("website",\
                getLatexHyperlink(pinfo.getNodeData("homepage",_LATEX_),pinfo.getNodeData("homepage",_LATEX_))))
        misc=""
        misc+="(W) "
        work_phone=pinfo.getNodeData("work_phone")
        misc+=getPhoneNumber(work_phone)
        #add flag for mobile
        if True:
            mobile_phone=pinfo.getNodeData("mobile_phone")
            misc+="\\ \\ $\\cdotp$\\ \\ (M) "
            misc+=getPhoneNumber(mobile_phone)
        content.append(getNewEntry("phone",misc))
        
        return content

    def getObjective():
        obj=data_file("data/objective.json")
        
        content=[]
        content.append(getSectionHeader("Objective"))
        
        #make flag for type of resume
        if True:
            variant="educational"
        objective=obj.getNodeData(variant)
        
        misc=""
        misc+=objective
        content.append(getDescription("",misc))

        return content

    def getResearchExperience():
        
        content=[]
        content.append(getSectionHeader("Research"))
        content.append(getNewEntry("2012--Present","1\\textsuperscript{st} Year Analyst, \\textsc{Lehman Brothers}"))
        misc=""
        misc+="Developed spreadsheets "
        misc+="for risk analysis on exotic derivatives on a wide array of "
        misc+="commodities (ags, oils, precious and base metals), managed blotter and secondary trades on structured notes, "
        misc+="liaised with Middle Office, Sales and Structuring for bookkeeping. "
        misc+="\\\\ Reference: John \\textsc{McDonald}\\ \\ $\\cdotp$\\ \\"
        misc+="  +1 (000) 111 1111\ \ $\cdotp$\ \ \href{mailto:john@lehman.com}{john@lehman.com}"
        content.append(getDescription("Lehman Brothers",misc))
        
        return content

    def getTeachingExperience():
        
        content=[]
        content.append(getSectionHeader("Research"))
        content.append(getNewEntry("2012--Present","1\\textsuperscript{st} Year Analyst, \\textsc{Lehman Brothers}"))
        misc=""
        misc+="Developed spreadsheets "
        misc+="for risk analysis on exotic derivatives on a wide array of "
        misc+="commodities (ags, oils, precious and base metals), managed blotter and secondary trades on structured notes, "
        misc+="liaised with Middle Office, Sales and Structuring for bookkeeping. "
        misc+="\\\\ Reference: John \\textsc{McDonald}\\ \\ $\\cdotp$\\ \\"
        misc+="  +1 (000) 111 1111\ \ $\cdotp$\ \ \href{mailto:john@lehman.com}{john@lehman.com}"
        content.append(getDescription("Lehman Brothers",misc))
        
        return content

    def getPressAndNewsReleases():
        
        content=[]
        content.append(getSectionHeader("Research"))
        content.append(getNewEntry("2012--Present","1\\textsuperscript{st} Year Analyst, \\textsc{Lehman Brothers}"))
        misc=""
        misc+="Developed spreadsheets "
        misc+="for risk analysis on exotic derivatives on a wide array of "
        misc+="commodities (ags, oils, precious and base metals), managed blotter and secondary trades on structured notes, "
        misc+="liaised with Middle Office, Sales and Structuring for bookkeeping. "
        misc+="\\\\ Reference: John \\textsc{McDonald}\\ \\ $\\cdotp$\\ \\"
        misc+="  +1 (000) 111 1111\ \ $\cdotp$\ \ \href{mailto:john@lehman.com}{john@lehman.com}"
        content.append(getDescription("Lehman Brothers",misc))
        
        return content

    def getEducation():

        content=[]
        content.append(getSectionHeader("Education"))
        content.append(getNewEntry("2011-2012","The University of California, Berkeley"))
        misc=""
        misc+="GPA: 8.0\\ \\ $\\cdotp$\\ \\ \\textit{First Class Honours}\\ \\ $\\cdotp$\\ \\ "
        misc+="School: Business and Administration\\newline Thesis: \\textit{Money Is The Root Of All Evil -- Or Is It?}\\newline "
        misc+="Description: This thesis explored the idea that money has been the cause of untold anguish and suffering in the world. "
        misc+="I found that it has, in fact, not.\\newline "
        misc+="Advisors: Prof.~James \\textsc{Smith} \\& Assoc. Prof.~Jane \\textsc{Smith}"
        content.append(getDescription("Masters of Commerce",misc))


        return content

    def getExperienceAndSkills():
        content=[]
        content.append(getSectionHeader("Education"))
        content.append(getNewEntry("2011-2012","The University of California, Berkeley"))
        misc=""
        misc+="GPA: 8.0\\ \\ $\\cdotp$\\ \\ \\textit{First Class Honours}\\ \\ $\\cdotp$\\ \\ "
        misc+="School: Business and Administration\\newline Thesis: \\textit{Money Is The Root Of All Evil -- Or Is It?}\\newline "
        misc+="Description: This thesis explored the idea that money has been the cause of untold anguish and suffering in the world. "
        misc+="I found that it has, in fact, not.\\newline "
        misc+="Advisors: Prof.~James \\textsc{Smith} \\& Assoc. Prof.~Jane \\textsc{Smith}"
        content.append(getDescription("Masters of Commerce",misc))

        return content

    def getAwards():
        content=[]
        content.append(getSectionHeader("Education"))
        content.append(getNewEntry("2011-2012","The University of California, Berkeley"))
        misc=""
        misc+="GPA: 8.0\\ \\ $\\cdotp$\\ \\ \\textit{First Class Honours}\\ \\ $\\cdotp$\\ \\ "
        misc+="School: Business and Administration\\newline Thesis: \\textit{Money Is The Root Of All Evil -- Or Is It?}\\newline "
        misc+="Description: This thesis explored the idea that money has been the cause of untold anguish and suffering in the world. "
        misc+="I found that it has, in fact, not.\\newline "
        misc+="Advisors: Prof.~James \\textsc{Smith} \\& Assoc. Prof.~Jane \\textsc{Smith}"
        content.append(getDescription("Masters of Commerce",misc))

        return content

    def getActivities():
        #qualify as professional, outreach, extra curricular
        content=[]
        content.append(getSectionHeader("Education"))
        content.append(getNewEntry("2011-2012","The University of California, Berkeley"))
        misc=""
        misc+="GPA: 8.0\\ \\ $\\cdotp$\\ \\ \\textit{First Class Honours}\\ \\ $\\cdotp$\\ \\ "
        misc+="School: Business and Administration\\newline Thesis: \\textit{Money Is The Root Of All Evil -- Or Is It?}\\newline "
        misc+="Description: This thesis explored the idea that money has been the cause of untold anguish and suffering in the world. "
        misc+="I found that it has, in fact, not.\\newline "
        misc+="Advisors: Prof.~James \\textsc{Smith} \\& Assoc. Prof.~Jane \\textsc{Smith}"
        content.append(getDescription("Masters of Commerce",misc))

        return content

    def getPublications():

        content=[]
        content.append(getSectionHeader("Publications"))
        content.append(getNewEntry("January 2013","Publication Title"))
        misc=""
        misc+="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut nisl tellus, sodales non pulvinar in, adipiscing "
        misc+="sit amet purus. Suspendisse sed facilisis diam. Sed ornare sem nec justo adipiscing nec venenatis lectus "
        misc+="commodo. Mauris non neque ligula. Pellentesque sed quam eu felis iaculis iaculis ac a leo. Suspendisse neque neque, placerat "
        misc+="id adipiscing et, elementum eu sem.\\\\ Authors: John \\textsc{Smith}, ~James "
        misc+="\\textsc{Smith}"
        content.append(getDescription("Full Journal Name",misc))

        return content

    spacing=0

    content=[]
    content+=getHeader()
    content.append("")
    content.append("\\begin{document}")
    content.append("\\thispagestyle{empty}")
    #begin{cv} in personalInfo, must be attached to name
    content+=getPersonalInfo()
    content.append("\\vspace{"+str(spacing+0.5)+"em}")
    if True:
        content+=getObjective()
        content.append("\\vspace{"+str(spacing)+"em}")
    content+=getEducation()
    content.append("\\vspace{"+str(spacing)+"em}")
    content+=getResearchExperience()
    content.append("\\vspace{"+str(spacing)+"em}")
    content+=getPublications()
    content.append("\\vspace{"+str(spacing)+"em}")

    content.append("")

    content.append("")
    content.append("\\end{cv}")
    content.append("\\end{document}")

    return content

if __name__ == "__main__":
    content=getResumeContent()
    destination="resume/full"
    mkdir_p(destination)
    destination+="/resume.tex"
    with open(destination,"w") as fout:
        fout.write("\n\n".join(content))
